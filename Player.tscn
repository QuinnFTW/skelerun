[gd_scene load_steps=6 format=2]

[ext_resource path="res://PlayerAnimation.tscn" type="PackedScene" id=1]
[ext_resource path="res://SFX/jump1.ogg" type="AudioStream" id=6]
[ext_resource path="res://SFX/pain.ogg" type="AudioStream" id=7]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

var motion = Vector2(0,0)
var time_out = false
var stun_time_out = false
var hurt = false
var is_being_pushed = false
var push_dir = 0

signal animate

const SPEED = 1000
const GRAVITY = 200
const UP = Vector2 (0, -1)
const JUMP_SPEED = 4500
const WORLD_LIMIT = 3000
const BOOST_MULTIPLIER = 1.5
const HURT_JUMP = 2000

func _ready():
	add_to_group(\"Player\")

func _physics_process(_delta):
	apply_gravity()
	move_and_slide(motion, UP)
	move()
	jump()
	drop()
	animate()
	push(push_dir)
	
func _process(delta):
	if time_out and hurt:
		yield(get_tree(), \"idle_frame\") 
		self.modulate.a = 0.5
		yield(get_tree(), \"idle_frame\") 
		self.modulate.a = 1.0
	
func apply_gravity():
	if position.y > WORLD_LIMIT:
		get_tree().call_group(\"Gamestate\", \"end_game\")
	if is_on_floor() and motion.y > 0 and not Input.is_action_pressed(\"jump\"):
		motion.y = 0
	elif is_on_ceiling():
		motion.y = 1
	else:
		motion.y += GRAVITY
		
func move():
	if stun_time_out == true:
		motion.x = push_dir
	elif Input.is_action_pressed(\"left\") and not Input.is_action_pressed(\"right\"):
		motion.x = -SPEED + push_dir 
	elif Input.is_action_pressed(\"right\") and not Input.is_action_pressed(\"left\"):
		motion.x = SPEED + push_dir  
	elif not is_being_pushed:
		motion.x = 0
	
func animate():
	emit_signal(\"animate\", motion)

func jump():
	if Input.is_action_just_pressed(\"jump\") and is_on_floor() and not stun_time_out:
		motion.y -= JUMP_SPEED
		$JumpSFX.play()
	
func hurt():
	if not time_out:
		#bypass regular movement commands by moving the player off the ground, waiting a frame, and then executing
		motion.y = 0
		position.y -= 1
		yield(get_tree(), \"idle_frame\") 
#		motion.y -= HURT_JUMP
		$HurtSFX.play()
		$Timer.start()
		$StunTimer.start()
		stun_time_out = true
		time_out = true
		hurt = true
	
func boost():
	position.y -= 1
	yield(get_tree(), \"idle_frame\")
	motion.y -= JUMP_SPEED * BOOST_MULTIPLIER
	
func start_push(is_pushing, push_direction):
	is_being_pushed = is_pushing
	push_dir = push_direction
	
func push(direction):
		motion.x += direction / 10
	
func _on_Timer_timeout():
	time_out = false
	hurt = false
	
func _on_StunTimer_timeout():
	stun_time_out = false
	
func drop():
	if Input.is_action_pressed(\"down\") and Input.is_action_just_pressed(\"special\"):
		self.position = Vector2(self.position.x, self.position.y + 5)



"

[sub_resource type="CapsuleShape2D" id=2]
radius = 87.837
height = 174.153

[node name="Player" type="KinematicBody2D" groups=[
"Player",
]]
position = Vector2( 513.052, 408.272 )
collision_mask = 14
script = SubResource( 1 )
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -3.49173, 3.05176e-05 )
scale = Vector2( 1.29592, 1.1016 )
shape = SubResource( 2 )

[node name="PlayerAnimation" parent="." instance=ExtResource( 1 )]
frame = 1

[node name="Camera2D" type="Camera2D" parent="."]
zoom = Vector2( 3, 3 )
limit_smoothed = true
drag_margin_h_enabled = true
drag_margin_v_enabled = true
smoothing_enabled = true

[node name="JumpSFX" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 6 )
volume_db = -8.078

[node name="HurtSFX" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 7 )
volume_db = -3.029

[node name="Timer" type="Timer" parent="."]
wait_time = 2.0

[node name="StunTimer" type="Timer" parent="."]
[connection signal="animate" from="." to="PlayerAnimation" method="_on_Player_animate"]
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
[connection signal="timeout" from="StunTimer" to="." method="_on_StunTimer_timeout"]
